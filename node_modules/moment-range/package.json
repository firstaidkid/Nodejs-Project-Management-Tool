{
  "name": "moment-range",
  "description": "Fancy date ranges for Moment.js",
  "author": {
    "name": "Gianni Chiappetta",
    "email": "gianni@runlevel6.org",
    "url": "http://gf3.ca"
  },
  "homepage": "https://github.com/gf3/moment-range",
  "bugs": "https://github.com/gf3/moment-range/issues",
  "main": "./lib/moment-range",
  "directories": {
    "lib": "./lib"
  },
  "version": "0.1.0",
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "moment": "1.3.0"
  },
  "devDependencies": {
    "coffee-script": "~1.3.3",
    "mocha": "1.0.3",
    "should": "0.6.3"
  },
  "repository": {
    "type": "git",
    "url": "https://git@github.com/gf3/moment-range.git"
  },
  "license": {
    "type": "Public Domain",
    "url": "https://github.com/gf3/moment-range/raw/master/UNLICENSE"
  },
  "readme": "moment-range\n============\n\nFancy date ranges for [Moment.js][moment].\n\n\nExamples\n--------\n\nCreate a date range:\n\n``` javascript\nvar start = new Date(2012, 0, 15)\n  , end   = new Date(2012, 4, 23)\n  , range = moment().range(start, end);\n```\n\nYou can also create a date range with moment objects:\n\n``` javascript\nvar start = moment(\"2011-04-15\", \"YYYY-MM-DD\")\n  , end   = moment(\"2011-11-27\", \"YYYY-MM-DD\")\n  , range = moment().range(start, end);\n```\n\nCheck to see if your range contains a date/moment:\n\n``` javascript\nvar start = new Date(2012, 4, 1)\n  , end   = new Date(2012, 4, 23)\n  , lol   = new Date(2012, 4, 15)\n  , wat   = new Date(2012, 2, 27)\n  , range = moment().range(start, end);\n\nrange.contains(lol); // true\nrange.contains(wat); // false\n```\n\nFind out if your moment falls within a date range:\n\n``` javascript\nvar start = new Date(2012, 4, 1)\n  , end   = new Date(2012, 4, 23)\n  , when  = moment(\"2012-05-10\", \"YYYY-MM-DD\")\n  , range = moment().range(start, end);\n\nwhen.within(range); // true\n```\n\nCompare range lengths or add them together with simple math:\n\n``` javascript\nvar r_1 = moment().range(new Date(2011, 2, 5), new Date(2011, 3, 15))\n  , r_2 = moment().range(new Date(1995, 0, 1), new Date(1995, 12, 25));\n\nr_2 > r_1 // true\n\nr_1 + r_2 // duration of both ranges in milliseconds\n\nMath.abs(r_1 - r_2); // difference of ranges in milliseconds\n```\n\n\nInstallation\n------------\n\nmoment-range works in both the browser and [node.js][node].\n\n\n### Browser\n\nSimply include moment-range after moment.js:\n\n``` html\n<script src=\"/javascripts/moment-range.js\"></script>\n```\n\n\n### Node\n\nInstall via npm:\n\n``` javascript\nnpm install moment-range\n```\n\nOr put it in your `pckage.json`:\n\n``` json\n{ \"moment-range\": \"0.1.0\" }\n```\n\n\nRunning Tests\n-------------\n\nClone this bad boy:\n\n``` bash\n$ git clone https://git@github.com/gf3/moment-range.git\n```\n\nInstall the dependencies:\n\n``` bash\n$ npm install\n```\n\nRun the tests:\n\n``` bash\n$ ./node_modules/.bin/cake test\n```\n\n\nLicense\n-------\n\nmoment-range is [UNLICENSED][unlicense].\n\n[moment]: http://momentjs.com/\n[node]: http://nodejs.org/\n[unlicense]: http://unlicense.org/\n\n",
  "readmeFilename": "README.md",
  "_id": "moment-range@0.1.0",
  "dist": {
    "shasum": "b972c1c66d148dae00117e6b3affc3111a68f954"
  },
  "_from": "moment-range@0.1.0",
  "_resolved": "https://registry.npmjs.org/moment-range/-/moment-range-0.1.0.tgz"
}
